import { EmblaCarouselType } from 'embla-carousel/components/EmblaCarousel';
import { AnimationsType } from 'embla-carousel/components/Animations';
import { CounterType } from 'embla-carousel/components/Counter';
import { DragTrackerType, PointerEventType } from 'embla-carousel/components/DragTracker';
import { EventHandlerType } from 'embla-carousel/components/EventHandler';
import { AxisType } from 'embla-carousel/components/Axis';
import { ScrollBodyType } from 'embla-carousel/components/ScrollBody';
import { ScrollTargetType } from 'embla-carousel/components/ScrollTarget';
import { ScrollToType } from 'embla-carousel/components/ScrollTo';
import { Vector1DType } from 'embla-carousel/components/Vector1d';
import { PercentOfViewType } from 'embla-carousel/components/PercentOfView';
import { WindowType } from 'embla-carousel/components/utils';
type DragHandlerCallbackType = (emblaApi: EmblaCarouselType, evt: PointerEventType) => boolean | void;
export type DragHandlerOptionType = boolean | DragHandlerCallbackType;
export type DragHandlerType = {
    init: (emblaApi: EmblaCarouselType) => void;
    destroy: () => void;
    pointerDown: () => boolean;
};
export declare function DragHandler(axis: AxisType, rootNode: HTMLElement, ownerDocument: Document, ownerWindow: WindowType, target: Vector1DType, dragTracker: DragTrackerType, location: Vector1DType, animation: AnimationsType, scrollTo: ScrollToType, scrollBody: ScrollBodyType, scrollTarget: ScrollTargetType, index: CounterType, eventHandler: EventHandlerType, percentOfView: PercentOfViewType, dragFree: boolean, dragThreshold: number, skipSnaps: boolean, baseFriction: number, watchDrag: DragHandlerOptionType): DragHandlerType;
export {};
